{
  "openapi": "3.1.0",
  "info": {
    "title": "OpenAPI definition",
    "version": "v0"
  },
  "servers": [
    {
      "url": "http://localhost:8080",
      "description": "Generated server url"
    }
  ],
  "tags": [
    {
      "description": "ユーザーの情報にアクセスする API です。",
      "name": "User"
    },
    {
      "description": "日記の情報にアクセスする API です。",
      "name": "Diary"
    }
  ],
  "paths": {
    "/api/diary": {
      "get": {
        "description": "日記を全件取得します。",
        "operationId": "getDiaries",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDiariesResponse"
                }
              }
            },
            "description": "成功。"
          },
          "401": {
            "description": "未認証。"
          },
          "404": {
            "description": "対応した日記が存在しません。"
          },
          "500": {
            "description": "サーバーエラー。"
          }
        },
        "summary": "日記を全件取得します。",
        "tags": [
          "Diary"
        ]
      },
      "post": {
        "description": "日記情報を登録します。",
        "operationId": "postDiary",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostDiaryRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "成功。"
          },
          "400": {
            "description": "リクエストエラー。"
          },
          "401": {
            "description": "未認証。"
          },
          "404": {
            "description": "日記の登録に失敗しました。"
          },
          "500": {
            "description": "サーバーエラー。"
          }
        },
        "summary": "日記情報を登録します。",
        "tags": [
          "Diary"
        ]
      },
      "put": {
        "description": "日記情報を更新します。",
        "operationId": "putDiary",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PutDiaryRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "成功。"
          },
          "400": {
            "description": "リクエストエラー。"
          },
          "401": {
            "description": "未認証。"
          },
          "404": {
            "description": "対応した日記が存在しません。"
          },
          "500": {
            "description": "サーバーエラー。"
          }
        },
        "summary": "日記情報を更新します。",
        "tags": [
          "Diary"
        ]
      }
    },
    "/api/diary/{id}": {
      "delete": {
        "description": "ID を指定して、日記情報を削除します。",
        "operationId": "deleteDiary",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "成功。"
          },
          "400": {
            "description": "リクエストエラー。"
          },
          "401": {
            "description": "未認証。"
          },
          "404": {
            "description": "対応した日記が存在しません。"
          },
          "500": {
            "description": "サーバーエラー。"
          }
        },
        "summary": "ID を指定して、日記情報を削除します。",
        "tags": [
          "Diary"
        ]
      },
      "get": {
        "description": "ID を指定して、日記情報を取得します。",
        "operationId": "getDiary",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDiaryResponse"
                }
              }
            },
            "description": "成功。"
          },
          "400": {
            "description": "リクエストエラー。"
          },
          "401": {
            "description": "未認証。"
          },
          "404": {
            "description": "対応した日記が存在しません。"
          },
          "500": {
            "description": "サーバーエラー。"
          }
        },
        "summary": "ID を指定して、日記情報を取得します。",
        "tags": [
          "Diary"
        ]
      }
    },
    "/api/user": {
      "get": {
        "description": "ユーザーを全件取得します。",
        "operationId": "getUsers",
        "responses": {
          "200": {
            "description": "成功。"
          },
          "500": {
            "description": "サーバーエラー。"
          }
        },
        "summary": "ユーザーを全件取得します。",
        "tags": [
          "User"
        ]
      },
      "post": {
        "description": "ユーザー情報を登録します。",
        "operationId": "postUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostUserRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "成功。"
          },
          "400": {
            "description": "リクエストエラー。"
          },
          "500": {
            "description": "サーバーエラー。"
          }
        },
        "summary": "ユーザー情報を登録します。",
        "tags": [
          "User"
        ]
      },
      "put": {
        "description": "ユーザー情報を更新します。",
        "operationId": "putUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PutUserRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "成功。"
          },
          "400": {
            "description": "リクエストエラー。"
          },
          "404": {
            "description": "対応したユーザーが存在しません。"
          },
          "500": {
            "description": "サーバーエラー。"
          }
        },
        "summary": "ユーザー情報を更新します。",
        "tags": [
          "User"
        ]
      }
    },
    "/api/user/{id}": {
      "delete": {
        "description": "ID を指定して、ユーザー情報を削除します。",
        "operationId": "deleteUser",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "成功。"
          },
          "400": {
            "description": "リクエストエラー。"
          },
          "404": {
            "description": "対応したユーザーが存在しません。"
          },
          "500": {
            "description": "サーバーエラー。"
          }
        },
        "summary": "ID を指定して、ユーザー情報を削除します。",
        "tags": [
          "User"
        ]
      },
      "get": {
        "description": "ID を指定して、ユーザー情報を取得します。",
        "operationId": "getUser",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "成功。"
          },
          "400": {
            "description": "リクエストエラー。"
          },
          "404": {
            "description": "対応したユーザーが存在しません。"
          },
          "500": {
            "description": "サーバーエラー。"
          }
        },
        "summary": "ID を指定して、ユーザー情報を取得します。",
        "tags": [
          "User"
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Diary": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string",
            "maxLength": 2147483647,
            "minLength": 1
          },
          "date": {
            "type": "string",
            "format": "date"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "title": {
            "type": "string",
            "maxLength": 30,
            "minLength": 1
          },
          "userId": {
            "type": "integer",
            "format": "int64"
          }
        },
        "required": [
          "content",
          "date",
          "id",
          "title",
          "userId"
        ]
      },
      "GetDiariesResponse": {
        "type": "object",
        "properties": {
          "diaryList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Diary"
            }
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "page": {
            "type": "integer",
            "format": "int32"
          },
          "total": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "GetDiaryResponse": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "title": {
            "type": "string"
          },
          "userId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "PostDiaryRequest": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date"
          },
          "title": {
            "type": "string"
          },
          "userId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "PostUserRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "PutDiaryRequest": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "title": {
            "type": "string"
          },
          "userId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "PutUserRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          }
        }
      }
    }
  }
}