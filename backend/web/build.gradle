plugins {
	id 'java'
	id 'org.springframework.boot' version "${springBootVersion}"
	id 'io.spring.dependency-management' version "${springDependencyManagementVersion}"
	id 'org.springdoc.openapi-gradle-plugin' version "${springdocOpenapiGradlePluginVersion}"
}

group = 'com.memoblend'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation supportDependencies.spring_boot_starter_web
	implementation supportDependencies.spring_boot_starter_validation
	implementation supportDependencies.springdoc_openapi_starter_webmvc_ui
	implementation supportDependencies.commons_lang3
	implementation supportDependencies.h2database
	implementation supportDependencies.spring_boot_starter_log4j2
	implementation supportDependencies.spring_boot_security_starter
	implementation supportDependencies.jjwt_api
	implementation supportDependencies.jjwt_impl
	implementation supportDependencies.jjwt_jackson
	developmentOnly supportDependencies.spring_boot_devtools

	implementation project(':application-core')
	implementation project(':infrastructure')
	implementation project(':system-common')

	testImplementation supportDependencies.spring_boot_starter_test
	testImplementation supportDependencies.spring_security_test
	compileOnly supportDependencies.servlet_api
}

configurations {
	all {
		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
	}
}
afterEvaluate {
    tasks.named("forkedSpringBootRun") {
		workingDir("$rootDir/api-docs/web")
	}
}
openApi {
    apiDocsUrl.set("http://localhost:8080/api-docs")
    outputDir.set(file("$rootDir/api-docs/web"))
    outputFileName.set("api-specification.json")
}
tasks.register('bootRunDev', org.springframework.boot.gradle.tasks.run.BootRun){
	group = 'application'
	description = 'Runs this project as a Spring Boot Application using local profile.'
	args = ["--spring.profiles.active=local"]
	main = 'com.memoblend.web.WebApplication'
	classpath = sourceSets.main.runtimeClasspath
}

tasks.named('test') {
	useJUnitPlatform()
}

build.dependsOn("generateOpenApiDocs")